<?php//include_once dirname(dirname(dirname(__FILE__))) . '/inc/home.php';include_once dirname(dirname(dirname(__FILE__))) . '/boot.php';class Votes {	private $pldir;	private $plcdir;	public function __construct($params = array()) {		$this->pldir = dirname(__FILE__);		$this->plcdir = trim(strrchr($this->pldir, DS), DS);	}			public function common($params = array()) {		$out = $this->showQuestion();		if (!$out)			$out = $this->showResults();					if (empty($out)) $out = 'Вопросов не имеем';					$out = str_replace('{PL_VOTES}', $out, $params);		return $out;	}			public function saveVote($title, $num) {		$history_file = $this->pldir . '/votes_history.dat';		if (!file_exists($history_file)) return false;				$data = unserialize(file_get_contents($history_file));		if (!empty($data) && is_array($data)) {			foreach ($data as $title_ => $votes) {				if (html_entity_decode($title) === $title_) {										if (count($votes) < 1) return false;					$n = 1;					foreach ($votes as $vote => $cnt) {																	if ($n == $num) {							$data[$title_][$vote] = $cnt + 1;							file_put_contents($history_file, serialize($data));							setcookie(md5($title), date("Y-m-d H:i"), time() + (9999*9999), '/');							return true;						}						$n++;					}					break;				}			}		}	}			public function showQuestion($params = array()) {		$history_file = $this->pldir . '/votes_history.dat';		if (!file_exists($history_file)) return '';							$tpl = file_get_contents($this->pldir . '/template/front_table.html');		$out = '';		$output = '';		$votes = unserialize(file_get_contents($history_file));		$cnt = count($votes);		if ($cnt > 0) {					foreach ($votes as $title => $ansvers) {				if (!empty($_COOKIE[md5($title)])) {					unset($votes[$title]);				}			}			$cnt = count($votes);			if ($cnt < 1) return false;							$rand = rand(0, $cnt - 1);			$n = 0;			foreach ($votes as $title => $ansvers) {				if ($n === $rand) {					$vote = $votes[$title];										$num = 1;					foreach ($vote as $vot => $cnt_ansv) {						$tplrow = file_get_contents($this->pldir . '/template/front_row.html');						$markets = array();											$markets['{NUMKEY}'] = $num;						$markets['{VARIANT}'] = h($vot);						$out .= str_replace(array_keys($markets), $markets, $tplrow);						$num++;					}										$markets = array();					$markets['{PLTITLE}'] = h($title);					$markets['{ACTION}'] = get_url('sys/plugins/' . $this->plcdir . '/ajax.php');					$markets['{PLCONTENT}'] = $out;					$output = str_replace(array_keys($markets), $markets, $tpl);					break;				}				$n++;			}		}				return $output;	}			public function showResult($title) {		$title = html_entity_decode($title);		$output = false;		$history_file = $this->pldir . '/votes_history.dat';		if (!file_exists($history_file)) return '';		$history = unserialize(file_get_contents($history_file));		if (empty($history) || count($history) < 1 || !array_key_exists($title, $history)) {			return false;		}				$history = $history[$title];						if (!empty($history) && count($history) > 0) {			arsort($history);			$n = 1;			$sum = array_sum($history);			$procent = round($sum / 100, 3);						$all_votes_cnt = 0;			foreach ($history as $vote => $cnt_ansv) {				$votepercents = ($cnt_ansv > 0) ? ceil($cnt_ansv / $procent) : 0;								$output .= $n . '.&nbsp;<span title="Голосов: ' . intval($cnt_ansv) 				. '(' . $votepercents . '%)">' . h($vote) . '</span>';				$output .= '<div style="height:1px; width:' . $votepercents . '%; background:#' 				. $this->getRandColor() . '; padding:2px 0px; margin:3px;"></div>';				$n++;				$all_votes_cnt +=intval($cnt_ansv);			}		}				$markets = array();		$markets['{PLTITLE}'] = $title;		$markets['{PLCONTENT}'] = $output;		$markets['{ALL_VOTES_CNT}'] = $all_votes_cnt;		$tpl = file_get_contents($this->pldir . '/template/front_table2.html');		$output = str_replace(array_keys($markets), $markets, $tpl);				return $output;	}			public function showResults($params = array()) {		$output = '';		$history_file = dirname(__FILE__) . '/votes_history.dat';		if (!file_exists($history_file)) return '';		$history = unserialize(file_get_contents($history_file));		if (empty($history) && count($history) < 1) return $output;				$rand = rand(0, count($history) - 1);		$keys = array_keys($history);		$key = $keys[rand(0, count($keys) - 1)];				$output = $this->showResult($key);						return $output;	}			private function getRandColor() {		$colors = array(			'7F9DB9',			'2144DA',			'A1523A',			'0B6C24',			'E3BF6A',			'0A737E',			'FF0000',		);		$rand = rand(0, 6);		return $colors[$rand];	}	}?>